package pharmacy.entities;

import custom.orm.db.QueryManager;
import custom.orm.db.utils.annotations.*;

@Entity(tableName = "medicines")
public class Medicine {
    @Id
    @AutoGenerated
    int id;

    String name;

    @Column(name = "needs_notice")
    boolean needsNotice;

    @Column(name = "category_id")
    int categoryId;

    @NotMapped
    MedCategory category;

    @Column(name = "lab_id")
    int labId;

    @NotMapped
    Laboratory laboratory;

    public Medicine(int id, String name, boolean needsNotice, int categoryId, int labId) {
        this.id = id;
        this.name = name;
        this.needsNotice = needsNotice;
        this.categoryId = categoryId;
        this.labId = labId;
    }

    public Medicine(String name, boolean needsNotice, int categoryId, int labId) {
        this.name = name;
        this.needsNotice = needsNotice;
        this.categoryId = categoryId;
        this.labId = labId;
    }

    public Medicine() {
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public boolean getNeedsNotice() {
        return needsNotice;
    }

    public void setNeedsNotice(boolean needsNotice) {
        this.needsNotice = needsNotice;
    }

    public int getCategoryId() {
        return categoryId;
    }

    public void setCategoryId(int categoryId) throws Exception {
        this.categoryId = categoryId;

        QueryManager qm = new QueryManager();
        Object categObj = qm.findById(null, new MedCategory(categoryId, ""));

        if (categObj != null) {
            this.setCategory((MedCategory) categObj);
        } else {
            this.setCategory(null);
        }
    }

    public MedCategory getCategory() {
        return category;
    }

    public void setCategory(MedCategory category) {
        this.category = category;
    }

    public int getLabId() {
        return labId;
    }

    public void setLabId(int labId) throws Exception {
        this.labId = labId;

        QueryManager qm = new QueryManager();
        Object labObj = qm.findById(null, new Laboratory(labId));

        if (labObj != null) {
            this.setLaboratory((Laboratory) labObj);
        } else {
            this.setLaboratory(null);
        }
    }

    public Laboratory getLaboratory() {
        return laboratory;
    }

    public void setLaboratory(Laboratory laboratory) {
        this.laboratory = laboratory;
    }
}
